#!/usr/bin/env python
# -*- coding:utf-8 -*-
#
# @Author: José Sánchez-Gallego (gallegoj@uw.edu)
# @Created: 2018-06-11
# @LastModified: 2018-06-11
# @Filename: guiderQA
# @License: BSD 3-clause (http://www.opensource.org/licenses/BSD-3-Clause)
# @Copyright: José Sánchez-Gallego

import logging

import click

import guiderqa.collect
from guiderqa import log


@click.group()
@click.option('-v', '--verbose', is_flag=True, default=False, help='Enables verbosity')
def guiderQA(verbose=False):

    if verbose:
        log.setLevel(logging.DEBUG)


@guiderQA.command()
@click.argument('PATH', type=click.Path(exists=True))
@click.argument('MJD', type=int, nargs=-2)
@click.argument('OUTFILE', type=str)
@click.option('-s', '--split', is_flag=True, help='One database per MJD')
def collect(path, mjd, outfile, split=False):

    if len(mjd) == 0 or len(mjd) > 2:
        raise click.UsageError('invalid number of MJD arguments')

    if len(mjd) == 1:
        mjd = (mjd[0], None)

    guiderqa.collect.collect(path, mjd[0], mjd[1], outfile=outfile, split_db=split)


if __name__ == '__main__':
    guiderQA()
